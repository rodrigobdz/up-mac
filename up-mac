#!/usr/bin/env bash
#
# Update dependencies mac via CLI.

set -o pipefail
set -o nounset

# Points to directory where script is located instead of pwd
LOG_DIR=$(dirname "$0")/log
readonly LOG_DIR

fancy_echo() {
  echo
  echo "==> $1"
  echo
}

# Check if command exists in path and is executable,
# otherwise skip.
entrypoint() {
  local -r cmd="$1"

  # shellcheck disable=2086
  if [ -x "$(command -v $cmd)" ]; then
    fancy_echo "$cmd up"
    return
  fi

  fancy_echo "Skipping $cmd"

  return 1
}

welcome() {
  fancy_echo "up-mac"
  mkdir -p "$LOG_DIR"/
}

brew_up() {
  entrypoint brew || return

  {
    fancy_echo "Updating and upgrading Homebrew"
    brew update && brew upgrade && brew cleanup --prune=all

    fancy_echo "brew cask up"
    brew upgrade --cask --greedy
  } 2>&1 | tee "$LOG_DIR"/brew.log
}

npm_up() {
  entrypoint npm || return

  fancy_echo "Upgrading global npm version"
  npm install --global npm@latest

  fancy_echo "Upgrading global npm packages"
  npm update --global &>"$LOG_DIR"/npm.log &
}

yarn_up() {
  entrypoint yarn || return

  {
    cd "$(yarn global dir)" &&
      fancy_echo "Cleaning yarn cache" &&
      yarn cache --force clean &&
      fancy_echo "Removing global yarn modules" &&
      rm -rf node_modules/ &&
      fancy_echo "Installing yarn modules" &&
      yarn install &&
      fancy_echo "Upgrading yarn modules" &&
      yarn upgrade &&
      fancy_echo "Autocleaning yarn" &&
      yarn autoclean --force
  } &>"$LOG_DIR"/yarn.log &
}

mas_up() {
  entrypoint mas || return

  fancy_echo "Upgrading Mac App Store apps"
  mas upgrade &>"$LOG_DIR"/mas.log &
}

backup_fish() {
  local -r fish_home="$HOME/.config/fish"
  fancy_echo "Backing up fish home under $fish_home"

  if [ ! -d "$fish_home" ]; then
    fancy_echo "Skipping fish backup because directory $fish_home does not exist"
    return
  fi

  fancy_echo "Backing up fish home under $fish_home to /tmp/fish_home.bak"
  cp -r "$fish_home" "/tmp/fish_home.bak"
}

fisher_up() {
  entrypoint fish || return

  backup_fish

  fancy_echo "Updating fisher"
  fish -c "fisher update" &>"$LOG_DIR"/fisher.log &
}

gem_up() {
  entrypoint gem || return

  fancy_echo "Updating user gems"
  gem update --user-install &>"$LOG_DIR"/gem.log &
}

rcup_up() {
  entrypoint rcup || return

  fancy_echo "Updating dotfiles using rcup"
  rcup &>"$LOG_DIR"/rcup.log &
}

tldr_up() {
  entrypoint tldr || return

  fancy_echo "Updating tldr"
  tldr --update &>"$LOG_DIR"/tldr.log &
}

z_up() {
  entrypoint z || return

  # Removes directories that no longer exist in ~/.local/share/z/data
  fancy_echo "Cleaning z cache"
  z --clean &>"$LOG_DIR"/z.log &
}

# VSCode
# Coming soon...
# https://github.com/Microsoft/vscode/issues/16459

main() {
  welcome
  # npm is installed and managed by homebrew
  # npm_up
  yarn_up
  mas_up
  fisher_up
  gem_up
  rcup_up
  tldr_up
  brew_up
  z_up
  wait
  fancy_echo "Hooray! Everything up-to-date." && exit 0
}

main "$@"
